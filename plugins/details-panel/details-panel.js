window.plugins=window.plugins||{},window.plugins.detailsPanel=class{buttonPanel=null;translations={"en-CA":{detailsPanel:"Details",nothing_found:"Nothing found",action_back:"Back",activate_crosshair:"Activate Crosshair"},"fr-CA":{detailsPanel:"Détails",nothing_found:"Aucun résultat",action_back:"Retour",activate_crosshair:"Activer le réticule"}};added=()=>{const{api:e,react:a,makeStyles:t,translate:n}=this,{mapId:r}=this.props,s=this.createElement,{useState:i,useEffect:l,useCallback:o}=a,{useTranslation:c}=n,{language:d}=e.map(r),u=t((e=>({mainContainer:{display:"flex",flexDirection:"row"},layersContainer:{overflow:"hidden",overflowY:"auto",width:"100%"},layerItem:{display:"flex",alignItems:"center",justifyContent:"space-between",margin:"5px 0",padding:"10px 5px",boxSizing:"content-box","&:hover":{cursor:"pointer",backgroundColor:"#c9c9c9"},zIndex:1e3},layerParentText:{fontSize:"16px",fontWeight:"bold"},layerCountTextContainer:{display:"flex",alignItems:"center",width:"100%"},layerFeatureCount:{display:"flex",justifyContent:"center",alignItems:"center",width:"32px",minWidth:"32px",height:"32px",boxShadow:"0 1px 3px 0 rgb(0 0 0 / 20%), 0 1px 1px 0 rgb(0 0 0 / 14%), 0 2px 1px -1px rgb(0 0 0 / 12%)",marginRight:"10px",color:"black",fontSize:"16px",fontWeight:"bold"},layerItemText:{fontSize:"14px",whiteSpace:"nowrap",textOverflow:"ellipsis",overflow:"hidden"},featuresContainer:{overflow:"hidden",overflowY:"auto",width:"100%"},featureItem:{display:"flex",alignItems:"center",justifyContent:"space-between",margin:"5px 0",padding:"10px 5px",boxSizing:"content-box","&:hover":{cursor:"pointer",backgroundColor:"#c9c9c9"},zIndex:1e3},featureIconTextContainer:{display:"flex",alignItems:"center",width:"100%"},featureItemIconContainer:{display:"flex",justifyContent:"center",alignItems:"center",width:"32px",minWidth:"32px",height:"32px",boxShadow:"0 1px 3px 0 rgb(0 0 0 / 20%), 0 1px 1px 0 rgb(0 0 0 / 14%), 0 2px 1px -1px rgb(0 0 0 / 12%)"},featureItemIcon:{},featureItemText:{display:"inline-block",width:"100%",fontWeight:"400",marginLeft:"10px",overflow:"hidden",whiteSpace:"nowrap",textOverflow:"ellipsis",fontSize:"16px"},featureInfoContainer:{width:"100%"},featureInfoHeader:{display:"flex",alignItems:"center"},featureInfoHeaderIconContainer:{display:"flex",justifyContent:"center",alignItems:"center",width:"32px",minWidth:"32px",height:"32px",boxShadow:"0 1px 3px 0 rgb(0 0 0 / 20%), 0 1px 1px 0 rgb(0 0 0 / 14%), 0 2px 1px -1px rgb(0 0 0 / 12%)"},featureInfoHeaderIcon:{},featureInfoHeaderText:{marginLeft:"10px",width:"100%",fontSize:18},featureInfoItemsContainer:{display:"flex",flexDirection:"column",marginTop:20},featureInfoItem:{display:"flex",flexDirection:"column",margin:"5px 0"},featureInfoItemKey:{fontWeight:"bold",fontSize:16},featureInfoItemValue:{fontSize:16,backgroundColor:"#ddd"}}))),m=(e,a)=>{let t=null;return e&&e.symbol?t=e.symbol:e&&e.uniqueValueInfos&&e.uniqueValueInfos.length>0&&(t=e.uniqueValueInfos.filter((t=>t.value===(a[e.field1]||a[e.field2]||a[e.field3])))[0].symbol),t},f=e=>{const a=u(),t=(a,t)=>{const{layerData:n,displayField:r,fieldAliases:s,renderer:i}=a.layers[t];e.selectLayer(a.layers[t]),1===n.length&&e.selectFeature({attributes:n[0].attributes,displayField:r,fieldAliases:s,symbol:m(i,n[0].attributes),numOfEntries:1})};return s("div",{className:a.layersContainer},Object.keys(e.layersData).map((n=>{const r=e.layersData[n];return s("div",{key:r.id},Object.keys(r.layers).map(((e,n)=>{const{layer:i,layerData:l,groupLayer:o}=r.layers[e];return s("div",{key:n,tabIndex:0,onKeyDown:a=>{"Enter"===a.key&&(o||t(r,e))}},o?s("div",{className:a.layerParentText,title:i.name},i.name):s("div",{className:a.layerItem,onClick:l.length>0?a=>{t(r,e)}:null},s("div",{className:a.layerCountTextContainer},s("span",{className:a.layerFeatureCount},l.length),s("div",{className:a.layerItemText,title:i.name},i.name))))})))})))},p=e=>{const{displayField:a,fieldAliases:t,layerData:n,renderer:r}=e.selectedLayer,i=u(),{t:o}=c(),d=(r,s)=>{this.buttonPanel.panel.addActionButton("back",o("action_back"),'<i class="material-icons">keyboard_backspace</i>',(()=>{1===n.length?e.setPanel(!0,!1,!1):e.selectLayer()})),e.selectFeature({attributes:r,displayField:a,fieldAliases:t,symbol:s,numOfEntries:n.length})};return l((()=>{this.buttonPanel.panel.addActionButton("back",o("action_back"),'<i class="material-icons">keyboard_backspace</i>',(()=>{e.setPanel(!0,!1,!1)}))}),[]),n.length>0?s("div",{className:i.featuresContainer},n.map(((e,t)=>{const{attributes:n}=e,l=m(r,n),o=n[a].length>0?`${n[a]}`:`${n.OBJECTID}`;return s("div",{key:t,tabIndex:0,onKeyDown:e=>{"Enter"===e.key&&d(n,l)}},s("div",{className:i.featureItem,onClick:e=>{d(n,l)}},s("div",{className:i.featureIconTextContainer},s("div",{className:i.featureItemIconContainer},l.imageData?s("img",{className:i.featureItemIcon,src:`data:${l.contentType};base64, ${l.imageData}`}):r.symbol.legendImageUrl?s("img",{className:i.featureItemIcon,src:r.symbol.legendImageUrl}):s("div",{className:i.featureItemIcon})),s("span",{className:i.featureItemText,title:o},o))))}))):s("div",{className:i.featureItemText},o("nothing_found"))},y=e=>{const{displayField:a,fieldAliases:t,attributes:n,symbol:r,numOfEntries:i}=e.selectedFeature,o=u(),{t:d}=c();return l((()=>{this.buttonPanel.panel.addActionButton("back",d("action_back"),'<i class="material-icons">keyboard_backspace</i>',(()=>{1===i?e.setPanel(!0,!1,!1):e.setPanel(!1,!0,!1)}))}),[]),s("div",{className:o.featureInfoContainer},s("div",{className:o.featureInfoHeader},s("div",{className:o.featureInfoHeaderIconContainer},r.imageData?s("img",{className:o.featureInfoHeaderIcon,src:`data:${r.contentType};base64, ${r.imageData}`}):r.legendImageUrl?s("img",{className:o.featureInfoHeaderIcon,src:r.legendImageUrl}):s("div",{className:o.featureInfoHeaderIcon})),s("span",{className:o.featureInfoHeaderText},n[a].length>0?`${n[a]}`:`${n.OBJECTID}`)),s("div",{className:o.featureInfoItemsContainer},Object.keys(n).map((e=>{const a=t[e],r=n[e];return r.length>0&&"OBJECTID"!==a&&"SHAPE"!==a&&s("div",{className:o.featureInfoItem,key:e,tabIndex:0},s("span",{className:o.featureInfoItemKey},a),s("span",{className:o.featureInfoItemValue},r))}))))},g={tooltip:this.translations[d].detailsPanel,icon:'<i class="material-icons">details</i>',visible:!1},b={title:this.translations[d].detailsPanel,icon:'<i class="material-icons">details</i>',content:()=>{const[a,t]=i({}),[n,d]=i({}),[g,b]=i({}),[h,x]=i(!1),[I,v]=i(!1),[w,k]=i(!1),C=u(),{t:N}=c(),P=e.map(r).map,S=async e=>{const a=await fetch(`${e}?f=json`);return await a.json()},D=(e,a,t)=>{this.buttonPanel.panel.removeActionButton("back"),x(e),v(a),k(t)},A=o((()=>{D(!0,!1,!1)}),[]),$=o((e=>{d(e),D(!1,!0,!1)}),[d]),_=o((e=>{b(e),D(!1,!1,!0)}),[b]),T=e=>{const a={};return e&&e.forEach((e=>{const{name:t,alias:n}=e;a[t]=n})),a},F=(e,a,t,n)=>{const{layers:r}=a[e.id];r[`${t.id}-${t.name.replace(/\s+/g,"-").toLowerCase()}`]={layer:t,groupLayer:n,layerData:[],displayField:t.displayField||t.displayFieldName||"",fieldAliases:T(t.fields),renderer:t.drawingInfo&&t.drawingInfo.renderer},a[e.id].layers=r},E=o(((e,n)=>{const r=a[e],{layers:s}=r;s[n].layerData=[],t((a=>({...a,[e]:{...a[e],layers:s}})))}),[a]),L=o((async e=>{const n=[];for(let r=0;r<Object.keys(a).length;r++){const s=Object.keys(a)[r],i=a[s],{layer:l,layers:o}=i;for(let a=0;a<Object.keys(o).length;a++){const r=Object.keys(o)[a];if(!o[r].groupLayer){E(s,r);const a=l._map.getSize(),i=l._map.getBounds(),c={xmin:i.getSouthWest().lng,ymin:i.getSouthWest().lat,xmax:i.getNorthEast().lng,ymax:i.getNorthEast().lat,spatialReference:{wkid:4326}},d=`${l.mapService.options.url}identify?f=json&tolerance=3&mapExtent=${c.xmin},${c.ymin},${c.xmax},${c.ymax}&imageDisplay=${a.x},${a.y},96&layers=visible:${o[r].layer.id}&returnFieldName=true&sr=4326&returnGeometry=true&geometryType=esriGeometryPoint&geometry=${e.lng},${e.lat}`,u=await fetch(d),m=await u.json();m&&m.results&&m.results.length>0&&(n.push({layer:o[r],entries:m.results}),o[r].layerData.push(...m.results),t((e=>({...e,[s]:{...e[s],layers:o}}))))}}}1===n.length?($(n[0].layer),1===n[0].entries.length&&_({attributes:n[0].entries[0].attributes,displayField:n[0].layer.displayField,fieldAliases:n[0].layer.fieldAliases,symbol:m(n[0].layer.renderer,n[0].entries[0].attributes),numOfEntries:1})):A(),this.buttonPanel.panel.open();const r=document.querySelectorAll(`[data-id=${this.buttonPanel.id}]`)[0];r&&r.querySelectorAll(".cgpv-panel-close")[0].focus()}),[_,$,A,E,a]);return l((()=>{const a=e.map(r).layers;e.map(r).createNavbarButton({id:"crosshair",tooltip:N("activate_crosshair"),icon:'\n                            <svg\n                                xmlns="http://www.w3.org/2000/svg"\n                                preserveAspectRatio="xMidYMid meet"\n                                viewBox="0 0 275 275"\n                                focusable="false"\n                            >\n                                <g\n                                    fill="none"\n                                    stroke="#000000"\n                                    stroke-width="5px"\n                                    id="crosshairs"\n                                    transform="translate(0 -1824.72) scale(2)"\n                                >\n                                    <path d="m136.18 983.66-130.93-0.00001m65.467-65.467v130.93m32.2-65.466c0 17.784-14.417 32.2-32.2 32.2-17.784 0-32.2-14.417-32.2-32.2 0-17.784 14.417-32.2 32.2-32.2 17.784 0 32.2 14.417 32.2 32.2z" />\n                                </g>\n                            </svg>',callback:()=>{this.buttonPanel.panel.close(),e.event.emit("map/crosshair_enable_disable",r,{buttonId:this.buttonPanel.id}),P.getContainer().focus()}});const n={};a.forEach((async e=>{if(n[e.id]={id:e.id,type:e.type,layer:e.layer,layers:{}},"ogcWMS"===e.type){const a=await S(e.layer.mapService.options.url+0),t=`${e.layer._url}?request=GetLegendGraphic&version=1.0.0&Service=WMS&format=image/png&layer=0`;a.drawingInfo&&a.drawingInfo.renderer&&a.drawingInfo.renderer.symbol&&Object.defineProperties(a.drawingInfo.renderer.symbol,{legendImageUrl:{value:t}}),F(e,n,a,!1)}else if("esriFeature"===e.type){const a=await S(e.layer.options.url);F(e,n,a,!1)}else if("esriDynamic"===e.type){const a=e.layer.getLayers(),t={};a.forEach((e=>{t[e]=e})),e.layer.metadata((async(a,r)=>{if(!a&&r.layers)for(let a=0;a<r.layers.length;a++){const s=r.layers[a];if(s.id in t){const a=await S(e.layer.options.url+s.id);if(F(e,n,a,null!==s.subLayerIds&&void 0!==s.subLayerIds),s.subLayerIds)for(let a=0;a<s.subLayerIds.length;a++){const t=s.subLayerIds[a],r=await S(e.layer.options.url+t);F(e,n,r,!1)}}}}))}})),t(n)}),[]),l((()=>(P.on("click",(async e=>{L(e.latlng)})),e.event.on("details_panel/crosshair_enter",(function(e){e.handlerName===r&&L(e.latlng)}),r),()=>{P.off("click"),e.event.off("details_panel/crosshair_enter")})),[L,P]),s("div",{className:C.mainContainer},h&&s(f,{layersData:a,selectFeature:_,selectLayer:$}),I&&s(p,{selectedLayer:n,selectFeature:_,setPanel:D}),w&&s(y,{selectedFeature:g,setPanel:D}))},width:300};this.buttonPanel=e.map(r).createAppbarPanel(g,b,null)};removed=()=>{const{mapId:e}=this.props;this.api.map(e).removeAppbarPanel(this.buttonPanel.id)}};