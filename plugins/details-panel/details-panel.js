window.plugins=window.plugins||{},window.plugins.detailsPanel=class{buttonPanel=null;translations={"en-CA":{detailsPanel:"Details",nothing_found:"Nothing found"},"fr-CA":{detailsPanel:"Détails",nothing_found:"Aucun résultat"}};added=()=>{const{api:e,react:a,makeStyles:t,translate:n}=this,{mapId:l}=this.props,r=this.createElement,{useState:i,useEffect:s,useCallback:o}=a,{useTranslation:c}=n,{language:d}=e.map(l),y=t((e=>({mainContainer:{display:"flex",flexDirection:"row"},layersContainer:{overflow:"hidden",overflowY:"auto",width:"100%"},layerItem:{display:"flex",alignItems:"center",justifyContent:"space-between",margin:"5px 0",padding:"10px 5px",boxSizing:"content-box","&:hover":{cursor:"pointer",backgroundColor:"#c9c9c9"},zIndex:1e3},layerCountTextContainer:{display:"flex",justifyContent:"space-around",alignItems:"center"},layerFeatureCount:{padding:"2px 8px",borderRadius:"50%",backgroundColor:"yellow",color:"black",marginRight:"10px"},layerItemText:{fontSize:"16px",fontWeight:"bold"},featuresContainer:{overflow:"hidden",overflowY:"auto",width:"100%"},featureItem:{display:"flex",alignItems:"center",justifyContent:"space-between",margin:"5px 0",padding:"10px 5px",boxSizing:"content-box","&:hover":{cursor:"pointer",backgroundColor:"#c9c9c9"},zIndex:1e3},featureIconTextContainer:{display:"flex",justifyContent:"space-around",alignItems:"center"},featureItemIcon:{padding:"2px 8px",borderRadius:"50%",backgroundColor:"yellow",color:"black",marginRight:"10px"},featureItemText:{fontSize:"16px",fontWeight:"bold"}}))),p=e=>{const a=y(),{t}=c();return r("div",{className:a.layersContainer},Object.keys(e.layersData).map((t=>{const n=e.layersData[t];return r("div",{key:n.id},Object.keys(n.layers).map(((t,l)=>{const{layer:i,layerData:s}=n.layers[t];return r("div",{key:l},r("div",{className:a.layerItem,onClick:function(a){e.selectLayer(n.layers[t])}},r("div",{className:a.layerCountTextContainer},r("span",{className:a.layerFeatureCount},s.length),r("div",{className:a.layerItemText,title:i.name},i.name))))})))})))},u=e=>{const{displayField:a,fieldAliases:t,layerData:n}=e.selectedLayer,l=y(),{t:i}=c();return n.length>0?r("div",{className:l.featuresContainer},n.map(((e,t)=>{const n=e.properties;return console.log(e),r("div",{key:t},r("div",{className:l.featureItem,onClick:e=>{}},r("div",{className:l.featureIconTextContainer},r("div",{className:l.featureItemIcon}),r("div",{className:l.featureItemText},`${n[a]}`))))}))):r("div",{className:l.featuresContainer},i("nothing_found"))},m={tooltip:this.translations[d].detailsPanel,icon:'<i class="material-icons">details</i>',visible:!1},f={title:this.translations[d].detailsPanel,icon:'<i class="material-icons">details</i>',content:()=>{const[a,t]=i({}),[n,c]=i({}),[d,m]=i(!0),[f,g]=i(!1),[h,x]=i(!1),b=y(),v=e.map(l).map,C=(e,a,t)=>{m(e),g(a),x(t)},I=o((()=>{C(!0,!1,!1)}),[]),w=o((e=>{C(!1,!0,!1),c(e)}),[c]),k=o((e=>{C(!1,!1,!0)}),[]),N=e=>{const a={};return e&&e.forEach((e=>{const{name:t,alias:n}=e;a[t]=n})),a},D=(e,a,t,n)=>{const{layers:l}=a[e.id];l[`${t.id}-${t.name.replace(/\s+/g,"-").toLowerCase()}`]={layer:t,layerData:[],displayField:n.fields.filter((e=>e.name===(n.displayField||n.displayFieldName)))[0].alias||"",fieldAliases:N(n.fields)},a[e.id].layers=l},P=o(((e,n)=>{const l=a[e],{layers:r}=l;r[n].layerData=[],t((a=>({...a,[e]:{...a[e],layers:r}})))}),[a]);return s((()=>{const a=e.map(l).layers,n={};a.forEach((e=>{n[e.id]={id:e.id,type:e.type,layer:e.layer,layers:{}},"ogcWMS"===e.type?e.layer.mapService.metadata(((a,t)=>{a||t.layers&&t.layers.forEach((async a=>{try{const t=`${e.layer.mapService.options.url}${a.id}?f=json`,l=await fetch(t),r=await l.json();D(e,n,a,r)}catch(e){console.log(e)}}))})):"esriFeature"===e.type?e.layer.metadata(((a,t)=>{a||e.layer.mapService.query().layer(t.id).run(((a,l,r)=>{a||D(e,n,t,r)}))})):"esriDynamic"===e.type&&e.layer.metadata(((a,t)=>{a||t.layers&&t.layers.forEach((a=>{e.layer.query().layer(a.id).run(((t,l,r)=>{t||D(e,n,a,r)}))}))}))})),t(n)}),[]),s((()=>(v.on("click",(e=>{Object.keys(a).forEach((n=>{const l=a[n],{layer:r,layers:i}=l;Object.keys(i).forEach((a=>{P(n,a),r.mapService.identify().on(v).layers(`visible:${i[a].layer.id}`).at(e.latlng).run(((e,l)=>{e||l.features.length>0&&(i[a].layerData.push(...l.features),t((e=>({...e,[n]:{...e[n],layers:i}}))))}))}))})),I(),this.buttonPanel.panel.open()})),()=>{v.off("click")})),[I,P,a,v]),r("div",{className:b.mainContainer},d&&r(p,{layersData:a,selectLayer:w}),f&&r(u,{selectedLayer:n,selectFeature:k}),h&&r("div",{},"Feature Info Panel"))},width:300};this.buttonPanel=e.map(l).createAppbarPanel(m,f,null)};removed=()=>{const{mapId:e}=this.props;this.api.map(e).removeAppbarPanel(this.buttonPanel.id)}};